{"version":3,"sources":["api/api.ts","components/TodoItem/TodoItem.tsx","components/UserItem/UserItem.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["getPrepearedTodos","a","fetch","then","response","json","data","todos","users","map","todo","user","find","id","userId","TodoItem","completed","title","UserItem","name","TodoList","useState","sortedTodos","setSortedTodos","clickHandler","event","prev","sort","b","Number","localeCompare","sortTodos","target","className","type","onClick","item","key","App","React","setTodos","isLoaded","setLoading","isError","setError","handleClick","catch","error","length","disabled","ReactDOM","render","document","getElementById"],"mappings":"kSAiBaA,EAAiB,uCAAG,8BAAAC,EAAA,sEAXxBC,MAJa,2CAKjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,qBAAGG,QASoB,cACzBC,EADyB,gBALxBL,MATa,2CAUjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,qBAAGG,QAGoB,cAEzBE,EAFyB,yBAIvBD,EAAME,KAAI,SAACC,GAAD,mBAAC,eACdA,GADa,IAEhBC,KAAMH,EAAMI,MAAK,SAACD,GAAD,OAAgBA,EAAKE,KAAOH,EAAKI,gBANrB,2CAAH,qD,OCVjBC,EAA4B,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAC1C,OACE,oCACE,sCAASA,EAAKM,YACd,4BAAMN,EAAKO,SCLJC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,4BAAKA,ICCIC,EAA4B,SAAC,GAAe,IAAbb,EAAY,EAAZA,MAAY,EAChBc,mBAAQ,YAAad,IADL,mBAC/Ce,EAD+C,KAClCC,EADkC,KA4BhDC,EAAe,SAACC,IAzBJ,SAACN,GACjB,OAAQA,GACN,IAAK,eAKH,YAJAI,GAAe,SAAAG,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAAC1B,EAAG2B,GACxC,OAAOC,OAAO5B,EAAEe,WAAaa,OAAOD,EAAEZ,iBAI1C,IAAK,QAKH,YAJAO,GAAe,SAAAG,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAAC1B,EAAG2B,GACxC,OAAO3B,EAAEgB,MAAMa,cAAcF,EAAEX,aAInC,QACEM,GAAe,SAAAG,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAAC1B,EAAG2B,GACxC,OAAI3B,EAAEU,MAAQiB,EAAEjB,KACPV,EAAEU,KAAKQ,KAAKW,cAAcF,EAAEjB,KAAKQ,MAGnC,SAQbY,CAFeN,EAAMO,OAAbnB,KAKV,OACE,2BAAOoB,UAAU,SACf,2BAAOA,UAAU,cACf,4BACE,wCAEE,4BACEpB,GAAG,eACHqB,KAAK,SACLD,UAAU,SACVE,QAASX,GAJX,WASF,mCAEE,4BACEX,GAAG,QACHqB,KAAK,SACLD,UAAU,SACVE,QAASX,GAJX,WASF,oCAEE,4BACEX,GAAG,OACHqB,KAAK,SACLD,UAAU,SACVE,QAASX,GAJX,aAWN,+BACGF,EAAYb,KAAI,SAAA2B,GAAI,OACnB,wBAAIH,UAAU,gBACZ,kBAAC,EAAD,CAAUI,IAAKD,EAAKnB,MAAOP,KAAM0B,IACjC,kBAAC,EAAD,CACEC,IAAKD,EAAKvB,GACVM,KAAMiB,EAAKzB,KAAOyB,EAAKzB,KAAKQ,KAAO,oBCxClCmB,EA1CO,WAAO,IAAD,EACAC,IAAMlB,SAAiB,IADvB,mBACnBd,EADmB,KACZiC,EADY,OAEKD,IAAMlB,UAAkB,GAF7B,mBAEnBoB,EAFmB,KAETC,EAFS,OAGEH,IAAMlB,SAAiB,IAHzB,mBAGnBsB,EAHmB,KAGVC,EAHU,KAKpBC,EAAW,uCAAG,sBAAA5C,EAAA,6DAClByC,GAAW,GADO,SAGZ1C,IACHG,MAAK,SAAAG,GAAI,OAAIkC,EAASlC,MACtBwC,OAAM,SAAAC,GACLH,EAASG,MANK,2CAAH,qDAUjB,OACE,yBAAKd,UAAU,gBACb,qDACC1B,EAAMyC,OAAS,EACZ,kBAAC,EAAD,CAAUzC,MAAOA,IAEjB,oCACE,4BACE0C,SAAUR,EACVP,KAAK,SACLD,UAAU,kBACVE,QAASU,GAERJ,EACG,UACA,QAELE,EACI,mDACD,QCpChBO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3a4b4aa7.chunk.js","sourcesContent":["import { Todo, User, PreparedTodo } from '../types';\n\nconst API_URL_TODOS = 'https://mate.academy/students-api/todos';\nconst API_URL_USERS = 'https://mate.academy/students-api/users';\n\nexport const loadTodos = (): Promise<Todo[]> => {\n  return fetch(API_URL_TODOS)\n    .then(response => response.json())\n    .then(({ data }): Todo[] => data);\n};\n\nexport const loadUsers = (): Promise<User[]> => {\n  return fetch(API_URL_USERS)\n    .then(response => response.json())\n    .then(({ data }): User[] => data);\n};\n\nexport const getPrepearedTodos = async (): Promise<PreparedTodo[]> => {\n  const todos = await loadTodos();\n  const users = await loadUsers();\n\n  return (todos.map((todo: Todo) => ({\n    ...todo,\n    user: users.find((user: User) => user.id === todo.userId),\n  })));\n};\n","import React from 'react';\nimport { Todo } from '../../types';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  return (\n    <>\n      <td>{ `${todo.completed}` }</td>\n      <td>{ todo.title }</td>\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  name: string;\n}\n\nexport const UserItem: React.FC<Props> = ({ name }) => {\n  return (\n    <td>{name}</td>\n  );\n};\n","import React, { useState } from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { UserItem } from '../UserItem/UserItem';\nimport { Todo } from '../../types';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [sortedTodos, setSortedTodos] = useState<Todo[]>([...todos]);\n\n  const sortTodos = (name: string) => {\n    switch (name) {\n      case 'completement':\n        setSortedTodos(prev => [...prev].sort((a, b) => {\n          return Number(a.completed) - Number(b.completed);\n        }));\n\n        return;\n      case 'title':\n        setSortedTodos(prev => [...prev].sort((a, b) => {\n          return a.title.localeCompare(b.title);\n        }));\n\n        return;\n      default:\n        setSortedTodos(prev => [...prev].sort((a, b) => {\n          if (a.user && b.user) {\n            return a.user.name.localeCompare(b.user.name);\n          }\n\n          return 0;\n        }));\n    }\n  };\n\n  const clickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.target as HTMLButtonElement;\n\n    sortTodos(id);\n  };\n\n  return (\n    <table className=\"table\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>\n            Completed\n            <button\n              id=\"completement\"\n              type=\"button\"\n              className=\"button\"\n              onClick={clickHandler}\n            >\n              &or;\n            </button>\n          </th>\n          <th>\n            Task\n            <button\n              id=\"title\"\n              type=\"button\"\n              className=\"button\"\n              onClick={clickHandler}\n            >\n              &or;\n            </button>\n          </th>\n          <th>\n            Owner\n            <button\n              id=\"name\"\n              type=\"button\"\n              className=\"button\"\n              onClick={clickHandler}\n            >\n              &or;\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedTodos.map(item => (\n          <tr className=\"table-active\">\n            <TodoItem key={item.title} todo={item} />\n            <UserItem\n              key={item.id}\n              name={item.user ? item.user.name : 'No owner'}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { getPrepearedTodos } from './api/api';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = React.useState<Todo[]>([]);\n  const [isLoaded, setLoading] = React.useState<boolean>(false);\n  const [isError, setError] = React.useState<string>('');\n\n  const handleClick = async () => {\n    setLoading(true);\n\n    await getPrepearedTodos()\n      .then(data => setTodos(data))\n      .catch(error => {\n        setError(error);\n      });\n  };\n\n  return (\n    <div className=\"container-md\">\n      <h1>Dynamic list of TODOs</h1>\n      {todos.length > 0\n        ? <TodoList todos={todos} />\n        : (\n          <>\n            <button\n              disabled={isLoaded}\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={handleClick}\n            >\n              {isLoaded\n                ? 'Loading'\n                : 'Load'}\n            </button>\n            {isError\n              ? (<p>Please, refresh page</p>)\n              : null}\n          </>\n        )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}